apiVersion: v1
kind: Namespace
metadata:
  name: helloworld
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: helloworld
  name: helloworld
  namespace: helloworld
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: helloworld
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: helloworld
    spec:
      containers:
        - image: gcr.io/google-containers/echoserver:1.10
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: helloworld
          ports:
            - containerPort: 8080
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: helloworld
  name: helloworld
  namespace: helloworld
spec:
  type: ClusterIP
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: helloworld
---
apiVersion: v1
kind: Secret
metadata:
  name: helloworld-acl-creds
  namespace: helloworld
stringData:
  kongCredType: acl
  group: acl-group
---
apiVersion: v1
kind: Secret
metadata:
  name: helloworld-basic-auth-creds
  namespace: helloworld
stringData:
  kongCredType: basic-auth
  username: basic-auth-user
  password: basic-auth-password
  group: acl-group
---
apiVersion: configuration.konghq.com/v1
kind: KongConsumer
metadata:
  name: acl-consumer
  namespace: helloworld
  annotations:
    kubernetes.io/ingress.class: kong
username: allowed-testing-user
credentials:
  - helloworld-acl-creds
---
apiVersion: configuration.konghq.com/v1
kind: KongConsumer
metadata:
  name: basic-auth-consumer
  namespace: helloworld
  annotations:
    kubernetes.io/ingress.class: kong
username: basic-auth-user
credentials:
  - helloworld-basic-auth-creds
---
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  annotations:
    kubernetes.io/ingress.class: kong
  name: acl
  namespace: helloworld
plugin: acl
config:
  # hide_groups_header: true
  allow:
    - basic-auth-user
    - acl
    - acl-consumer
    - acl-group
    - basic-auth-consumer
    - allowed-testing-user
    - basic-auth
    - kong
---
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  annotations:
    kubernetes.io/ingress.class: kong
  name: basic-auth
  namespace: helloworld
plugin: basic-auth
# config:
#   hide_credentials: true
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    konghq.com/plugins: basic-auth, acl
  labels:
    app: helloworld
  name: helloworld
  namespace: helloworld
spec:
  ingressClassName: kong
  rules:
    - host: helloworld
      http:
        paths:
          - backend:
              service:
                name: helloworld
                port:
                  number: 8080
            path: /
            pathType: Prefix